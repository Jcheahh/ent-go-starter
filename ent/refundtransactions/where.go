// Code generated by ent, DO NOT EDIT.

package refundtransactions

import (
	"entdemo/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLTE(FieldID, id))
}

// RefundAmount applies equality check predicate on the "refundAmount" field. It's identical to RefundAmountEQ.
func RefundAmount(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldRefundAmount, v))
}

// RefundCurrency applies equality check predicate on the "refundCurrency" field. It's identical to RefundCurrencyEQ.
func RefundCurrency(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldRefundCurrency, v))
}

// RefundReason applies equality check predicate on the "refundReason" field. It's identical to RefundReasonEQ.
func RefundReason(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldRefundReason, v))
}

// RefundStatus applies equality check predicate on the "refundStatus" field. It's identical to RefundStatusEQ.
func RefundStatus(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldRefundStatus, v))
}

// DateCreated applies equality check predicate on the "dateCreated" field. It's identical to DateCreatedEQ.
func DateCreated(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldDateCreated, v))
}

// DateUpdated applies equality check predicate on the "dateUpdated" field. It's identical to DateUpdatedEQ.
func DateUpdated(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldDateUpdated, v))
}

// RefundAmountEQ applies the EQ predicate on the "refundAmount" field.
func RefundAmountEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldRefundAmount, v))
}

// RefundAmountNEQ applies the NEQ predicate on the "refundAmount" field.
func RefundAmountNEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNEQ(FieldRefundAmount, v))
}

// RefundAmountIn applies the In predicate on the "refundAmount" field.
func RefundAmountIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldIn(FieldRefundAmount, vs...))
}

// RefundAmountNotIn applies the NotIn predicate on the "refundAmount" field.
func RefundAmountNotIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNotIn(FieldRefundAmount, vs...))
}

// RefundAmountGT applies the GT predicate on the "refundAmount" field.
func RefundAmountGT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGT(FieldRefundAmount, v))
}

// RefundAmountGTE applies the GTE predicate on the "refundAmount" field.
func RefundAmountGTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGTE(FieldRefundAmount, v))
}

// RefundAmountLT applies the LT predicate on the "refundAmount" field.
func RefundAmountLT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLT(FieldRefundAmount, v))
}

// RefundAmountLTE applies the LTE predicate on the "refundAmount" field.
func RefundAmountLTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLTE(FieldRefundAmount, v))
}

// RefundAmountContains applies the Contains predicate on the "refundAmount" field.
func RefundAmountContains(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContains(FieldRefundAmount, v))
}

// RefundAmountHasPrefix applies the HasPrefix predicate on the "refundAmount" field.
func RefundAmountHasPrefix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasPrefix(FieldRefundAmount, v))
}

// RefundAmountHasSuffix applies the HasSuffix predicate on the "refundAmount" field.
func RefundAmountHasSuffix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasSuffix(FieldRefundAmount, v))
}

// RefundAmountEqualFold applies the EqualFold predicate on the "refundAmount" field.
func RefundAmountEqualFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEqualFold(FieldRefundAmount, v))
}

// RefundAmountContainsFold applies the ContainsFold predicate on the "refundAmount" field.
func RefundAmountContainsFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContainsFold(FieldRefundAmount, v))
}

// RefundCurrencyEQ applies the EQ predicate on the "refundCurrency" field.
func RefundCurrencyEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldRefundCurrency, v))
}

// RefundCurrencyNEQ applies the NEQ predicate on the "refundCurrency" field.
func RefundCurrencyNEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNEQ(FieldRefundCurrency, v))
}

// RefundCurrencyIn applies the In predicate on the "refundCurrency" field.
func RefundCurrencyIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldIn(FieldRefundCurrency, vs...))
}

// RefundCurrencyNotIn applies the NotIn predicate on the "refundCurrency" field.
func RefundCurrencyNotIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNotIn(FieldRefundCurrency, vs...))
}

// RefundCurrencyGT applies the GT predicate on the "refundCurrency" field.
func RefundCurrencyGT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGT(FieldRefundCurrency, v))
}

// RefundCurrencyGTE applies the GTE predicate on the "refundCurrency" field.
func RefundCurrencyGTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGTE(FieldRefundCurrency, v))
}

// RefundCurrencyLT applies the LT predicate on the "refundCurrency" field.
func RefundCurrencyLT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLT(FieldRefundCurrency, v))
}

// RefundCurrencyLTE applies the LTE predicate on the "refundCurrency" field.
func RefundCurrencyLTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLTE(FieldRefundCurrency, v))
}

// RefundCurrencyContains applies the Contains predicate on the "refundCurrency" field.
func RefundCurrencyContains(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContains(FieldRefundCurrency, v))
}

// RefundCurrencyHasPrefix applies the HasPrefix predicate on the "refundCurrency" field.
func RefundCurrencyHasPrefix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasPrefix(FieldRefundCurrency, v))
}

// RefundCurrencyHasSuffix applies the HasSuffix predicate on the "refundCurrency" field.
func RefundCurrencyHasSuffix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasSuffix(FieldRefundCurrency, v))
}

// RefundCurrencyEqualFold applies the EqualFold predicate on the "refundCurrency" field.
func RefundCurrencyEqualFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEqualFold(FieldRefundCurrency, v))
}

// RefundCurrencyContainsFold applies the ContainsFold predicate on the "refundCurrency" field.
func RefundCurrencyContainsFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContainsFold(FieldRefundCurrency, v))
}

// RefundReasonEQ applies the EQ predicate on the "refundReason" field.
func RefundReasonEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldRefundReason, v))
}

// RefundReasonNEQ applies the NEQ predicate on the "refundReason" field.
func RefundReasonNEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNEQ(FieldRefundReason, v))
}

// RefundReasonIn applies the In predicate on the "refundReason" field.
func RefundReasonIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldIn(FieldRefundReason, vs...))
}

// RefundReasonNotIn applies the NotIn predicate on the "refundReason" field.
func RefundReasonNotIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNotIn(FieldRefundReason, vs...))
}

// RefundReasonGT applies the GT predicate on the "refundReason" field.
func RefundReasonGT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGT(FieldRefundReason, v))
}

// RefundReasonGTE applies the GTE predicate on the "refundReason" field.
func RefundReasonGTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGTE(FieldRefundReason, v))
}

// RefundReasonLT applies the LT predicate on the "refundReason" field.
func RefundReasonLT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLT(FieldRefundReason, v))
}

// RefundReasonLTE applies the LTE predicate on the "refundReason" field.
func RefundReasonLTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLTE(FieldRefundReason, v))
}

// RefundReasonContains applies the Contains predicate on the "refundReason" field.
func RefundReasonContains(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContains(FieldRefundReason, v))
}

// RefundReasonHasPrefix applies the HasPrefix predicate on the "refundReason" field.
func RefundReasonHasPrefix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasPrefix(FieldRefundReason, v))
}

// RefundReasonHasSuffix applies the HasSuffix predicate on the "refundReason" field.
func RefundReasonHasSuffix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasSuffix(FieldRefundReason, v))
}

// RefundReasonEqualFold applies the EqualFold predicate on the "refundReason" field.
func RefundReasonEqualFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEqualFold(FieldRefundReason, v))
}

// RefundReasonContainsFold applies the ContainsFold predicate on the "refundReason" field.
func RefundReasonContainsFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContainsFold(FieldRefundReason, v))
}

// RefundStatusEQ applies the EQ predicate on the "refundStatus" field.
func RefundStatusEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldRefundStatus, v))
}

// RefundStatusNEQ applies the NEQ predicate on the "refundStatus" field.
func RefundStatusNEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNEQ(FieldRefundStatus, v))
}

// RefundStatusIn applies the In predicate on the "refundStatus" field.
func RefundStatusIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldIn(FieldRefundStatus, vs...))
}

// RefundStatusNotIn applies the NotIn predicate on the "refundStatus" field.
func RefundStatusNotIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNotIn(FieldRefundStatus, vs...))
}

// RefundStatusGT applies the GT predicate on the "refundStatus" field.
func RefundStatusGT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGT(FieldRefundStatus, v))
}

// RefundStatusGTE applies the GTE predicate on the "refundStatus" field.
func RefundStatusGTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGTE(FieldRefundStatus, v))
}

// RefundStatusLT applies the LT predicate on the "refundStatus" field.
func RefundStatusLT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLT(FieldRefundStatus, v))
}

// RefundStatusLTE applies the LTE predicate on the "refundStatus" field.
func RefundStatusLTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLTE(FieldRefundStatus, v))
}

// RefundStatusContains applies the Contains predicate on the "refundStatus" field.
func RefundStatusContains(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContains(FieldRefundStatus, v))
}

// RefundStatusHasPrefix applies the HasPrefix predicate on the "refundStatus" field.
func RefundStatusHasPrefix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasPrefix(FieldRefundStatus, v))
}

// RefundStatusHasSuffix applies the HasSuffix predicate on the "refundStatus" field.
func RefundStatusHasSuffix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasSuffix(FieldRefundStatus, v))
}

// RefundStatusEqualFold applies the EqualFold predicate on the "refundStatus" field.
func RefundStatusEqualFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEqualFold(FieldRefundStatus, v))
}

// RefundStatusContainsFold applies the ContainsFold predicate on the "refundStatus" field.
func RefundStatusContainsFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContainsFold(FieldRefundStatus, v))
}

// DateCreatedEQ applies the EQ predicate on the "dateCreated" field.
func DateCreatedEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldDateCreated, v))
}

// DateCreatedNEQ applies the NEQ predicate on the "dateCreated" field.
func DateCreatedNEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNEQ(FieldDateCreated, v))
}

// DateCreatedIn applies the In predicate on the "dateCreated" field.
func DateCreatedIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldIn(FieldDateCreated, vs...))
}

// DateCreatedNotIn applies the NotIn predicate on the "dateCreated" field.
func DateCreatedNotIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNotIn(FieldDateCreated, vs...))
}

// DateCreatedGT applies the GT predicate on the "dateCreated" field.
func DateCreatedGT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGT(FieldDateCreated, v))
}

// DateCreatedGTE applies the GTE predicate on the "dateCreated" field.
func DateCreatedGTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGTE(FieldDateCreated, v))
}

// DateCreatedLT applies the LT predicate on the "dateCreated" field.
func DateCreatedLT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLT(FieldDateCreated, v))
}

// DateCreatedLTE applies the LTE predicate on the "dateCreated" field.
func DateCreatedLTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLTE(FieldDateCreated, v))
}

// DateCreatedContains applies the Contains predicate on the "dateCreated" field.
func DateCreatedContains(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContains(FieldDateCreated, v))
}

// DateCreatedHasPrefix applies the HasPrefix predicate on the "dateCreated" field.
func DateCreatedHasPrefix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasPrefix(FieldDateCreated, v))
}

// DateCreatedHasSuffix applies the HasSuffix predicate on the "dateCreated" field.
func DateCreatedHasSuffix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasSuffix(FieldDateCreated, v))
}

// DateCreatedEqualFold applies the EqualFold predicate on the "dateCreated" field.
func DateCreatedEqualFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEqualFold(FieldDateCreated, v))
}

// DateCreatedContainsFold applies the ContainsFold predicate on the "dateCreated" field.
func DateCreatedContainsFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContainsFold(FieldDateCreated, v))
}

// DateUpdatedEQ applies the EQ predicate on the "dateUpdated" field.
func DateUpdatedEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEQ(FieldDateUpdated, v))
}

// DateUpdatedNEQ applies the NEQ predicate on the "dateUpdated" field.
func DateUpdatedNEQ(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNEQ(FieldDateUpdated, v))
}

// DateUpdatedIn applies the In predicate on the "dateUpdated" field.
func DateUpdatedIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldIn(FieldDateUpdated, vs...))
}

// DateUpdatedNotIn applies the NotIn predicate on the "dateUpdated" field.
func DateUpdatedNotIn(vs ...string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldNotIn(FieldDateUpdated, vs...))
}

// DateUpdatedGT applies the GT predicate on the "dateUpdated" field.
func DateUpdatedGT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGT(FieldDateUpdated, v))
}

// DateUpdatedGTE applies the GTE predicate on the "dateUpdated" field.
func DateUpdatedGTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldGTE(FieldDateUpdated, v))
}

// DateUpdatedLT applies the LT predicate on the "dateUpdated" field.
func DateUpdatedLT(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLT(FieldDateUpdated, v))
}

// DateUpdatedLTE applies the LTE predicate on the "dateUpdated" field.
func DateUpdatedLTE(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldLTE(FieldDateUpdated, v))
}

// DateUpdatedContains applies the Contains predicate on the "dateUpdated" field.
func DateUpdatedContains(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContains(FieldDateUpdated, v))
}

// DateUpdatedHasPrefix applies the HasPrefix predicate on the "dateUpdated" field.
func DateUpdatedHasPrefix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasPrefix(FieldDateUpdated, v))
}

// DateUpdatedHasSuffix applies the HasSuffix predicate on the "dateUpdated" field.
func DateUpdatedHasSuffix(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldHasSuffix(FieldDateUpdated, v))
}

// DateUpdatedEqualFold applies the EqualFold predicate on the "dateUpdated" field.
func DateUpdatedEqualFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldEqualFold(FieldDateUpdated, v))
}

// DateUpdatedContainsFold applies the ContainsFold predicate on the "dateUpdated" field.
func DateUpdatedContainsFold(v string) predicate.RefundTransactions {
	return predicate.RefundTransactions(sql.FieldContainsFold(FieldDateUpdated, v))
}

// HasTransaction applies the HasEdge predicate on the "transaction" edge.
func HasTransaction() predicate.RefundTransactions {
	return predicate.RefundTransactions(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, TransactionTable, TransactionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTransactionWith applies the HasEdge predicate on the "transaction" edge with a given conditions (other predicates).
func HasTransactionWith(preds ...predicate.Transaction) predicate.RefundTransactions {
	return predicate.RefundTransactions(func(s *sql.Selector) {
		step := newTransactionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.RefundTransactions) predicate.RefundTransactions {
	return predicate.RefundTransactions(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.RefundTransactions) predicate.RefundTransactions {
	return predicate.RefundTransactions(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.RefundTransactions) predicate.RefundTransactions {
	return predicate.RefundTransactions(func(s *sql.Selector) {
		p(s.Not())
	})
}
